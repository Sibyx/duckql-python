{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to duckQL library","text":"<p>duckQL is simple library which converts JSON-based object to raw SQL in different SQL dialects.</p> <p>Follow links in right navigation menu to get closer with syntax.</p> <p>Simple example of usage:</p> <pre><code>from duckql import Concat, Avg, Property, Constant, Query, Join, Comparision\n\nmy_qyery = Query(\n        entity='users',\n        properties=[\n            Concat(\n                properties=[\n                    Property(name='users.name'),\n                    Constant(value=' '),\n                    Property(name='users.surname')\n                ],\n                alias='full_name'\n            ),\n            Avg(\n                property=Property(name='transactions.value'),\n                alias='average_transaction_value'\n            )\n        ],\n        joins=[\n            Join(\n                entity='transactions',\n                type=Join.Type.LEFT,\n                on=Comparision(\n                    properties=[\n                        Property(name='transactions.user_id'),\n                        Property(name='users.id')\n                    ],\n                    operation=Comparision.Operation.EQUAL\n                )\n            )\n        ],\n        conditions=Comparision(\n            properties=[\n                Property(name='users.age'),\n                Constant(value=15)\n            ],\n            operation=Comparision.Operation.GREATER_EQUAL\n        ),\n        group=[\n            Property(name='users.id'),\n        ],\n    )\n</code></pre> <pre><code>{\n  \"obj\": \"structures.Query\",\n  \"entity\": \"users\",\n  \"properties\": [\n    {\n      \"obj\": \"functions.Concat\",\n      \"properties\": [\n        {\n          \"obj\": \"properties.Property\",\n          \"name\": \"users.name\"\n        },\n        {\n          \"obj\": \"properties.Constant\",\n          \"value\": \" \"\n        },\n        {\n          \"obj\": \"properties.Property\",\n          \"name\": \"users.surname\"\n        }\n      ],\n      \"alias\": \"full_name\"\n    },\n    {\n      \"obj\": \"functions.Avg\",\n      \"property\": {\n        \"obj\": \"properties.Property\",\n        \"name\": \"transactions.value\",\n        \"alias\": null\n      },\n      \"alias\": \"average_transaction_value\"\n    }\n  ],\n  \"joins\": [\n    {\n      \"obj\": \"structures.Join\",\n      \"entity\": \"transactions\",\n      \"type\": \"left\",\n      \"on\": {\n        \"obj\": \"structures.Comparision\",\n        \"properties\": [\n          {\n            \"obj\": \"properties.Property\",\n            \"name\": \"transactions.user_id\"\n          },\n          {\n            \"obj\": \"properties.Property\",\n            \"name\": \"users.id\"\n          }\n        ],\n        \"operation\": \"eq\"\n      }\n    }\n  ],\n  \"conditions\": {\n    \"obj\": \"structures.Comparision\",\n    \"properties\": [\n      {\n        \"obj\": \"properties.Property\",\n        \"name\": \"users.age\",\n        \"alias\": null\n      },\n      {\n        \"obj\": \"properties.Constant\",\n        \"value\": \"15\"\n      }\n    ],\n    \"operation\": \"gte\"\n  },\n  \"group\": [\n    {\n      \"obj\": \"properties.Property\",\n      \"name\": \"users.id\"\n    }\n  ]\n}\n</code></pre> <pre><code>SELECT CONCAT(users.name, ' ', users.surname) AS full_name, AVG(transactions.value) AS average_transaction_value FROM\nusers LEFT JOIN transactions ON (transactions.user_id = users.id) WHERE (users.age &gt;= 15) GROUP BY users.id\n</code></pre>"},{"location":"functions/avg/","title":"Avg","text":""},{"location":"functions/avg/#basic-information","title":"Basic information","text":"Object type <code>functions.Avg</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"functions/avg/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.Avg</code> True property <code>properties.Property</code> <code>functions.*</code> <code>Constant</code> <code>CastOperator</code> True alias String False"},{"location":"functions/avg/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.Avg\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.name\"\n  },\n  \"alias\": \"avg_name\"\n}\n</code></pre>"},{"location":"functions/avg/#sql","title":"SQL","text":"<pre><code>AVG(users.name) AS avg_name\n</code></pre>"},{"location":"functions/avg/#sql-reference","title":"SQL reference","text":"<ul> <li>PostgreSQL</li> <li>MySQL</li> <li>MariaDB</li> </ul>"},{"location":"functions/concat/","title":"Concat","text":""},{"location":"functions/concat/#basic-information","title":"Basic information","text":"Object type <code>functions.Concat</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"functions/concat/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.Concat</code> True properties List[<code>functions.*</code> <code>Property</code> <code>Constant</code> <code>CastOperator</code>] True alias String False"},{"location":"functions/concat/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.Concat\",\n  \"properties\": [\n    {\n      \"obj\": \"properties.Property\",\n      \"name\": \"users.name\"\n    },\n    {\n      \"obj\": \"properties.Constant\",\n      \"value\": \" \"\n    },\n    {\n      \"obj\": \"properties.Property\",\n      \"name\": \"users.surname\"\n    }\n  ],\n  \"alias\": \"full_name\"\n}\n</code></pre>"},{"location":"functions/concat/#sql","title":"SQL","text":"<pre><code>CONCAT(users.name, ' ', users.surname) AS full_name\n</code></pre>"},{"location":"functions/convert_timezone/","title":"ConvertTimezone","text":""},{"location":"functions/convert_timezone/#basic-information","title":"Basic information","text":"Object type <code>functions.ConvertTimezone</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code>"},{"location":"functions/convert_timezone/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.ConvertTimezone</code> True property <code>functions.*</code> <code>Property</code> <code>Constant</code> <code>CastOperator</code> True date_from <code>Constant</code> True date_to <code>Constant</code> True alias String False"},{"location":"functions/convert_timezone/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.ConvertTimezone\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.name\"\n  },\n  \"date_from\": {\n    \"obj\": \"properties.Constant\",\n    \"value\": \"+00:00\"\n  },\n  \"date_to\": {\n    \"obj\": \"properties.Constant\",\n    \"value\": \"Europe/Bratislava\"\n  },\n  \"alias\": \"my_time\"\n}\n</code></pre>"},{"location":"functions/convert_timezone/#sql","title":"SQL","text":"<pre><code>CONVERT_TZ(users.name, '+00:00', 'Europe/Bratislava') AS my_time\n</code></pre>"},{"location":"functions/count/","title":"Count","text":""},{"location":"functions/count/#basic-information","title":"Basic information","text":"Object type <code>functions.Count</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"functions/count/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.Count</code> True property <code>properties.Property</code> <code>CastOperator</code> <code>Distinct</code> True alias String False"},{"location":"functions/count/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.Count\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.id\"\n  },\n  \"alias\": \"user_count\"\n}\n</code></pre>"},{"location":"functions/count/#sql","title":"SQL","text":"<pre><code>COUNT(users.id) AS user_count\n</code></pre>"},{"location":"functions/current_date/","title":"CurrentDate","text":""},{"location":"functions/current_date/#basic-information","title":"Basic information","text":"Object type <code>functions.CurrentDate</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"functions/current_date/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.CurrentDate</code> True alias String False"},{"location":"functions/current_date/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.CurrentDate\",\n  \"alias\": \"today\"\n}\n</code></pre>"},{"location":"functions/current_date/#sql","title":"SQL","text":"<pre><code>CURRENT_DATE() AS today\n</code></pre>"},{"location":"functions/date_add/","title":"DateAdd","text":""},{"location":"functions/date_add/#basic-information","title":"Basic information","text":"Object type <code>functions.DateAdd</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"functions/date_add/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.DateAdd</code> True property <code>functions.*</code> <code>Property</code> <code>Constant</code> <code>CastOperator</code> True interval <code>Interval</code> True alias String False"},{"location":"functions/date_add/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.DateAdd\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.created_at\",\n    \"alias\": null\n  },\n  \"interval\": {\n    \"obj\": \"structures.Interval\",\n    \"value\": 4,\n    \"unit\": \"year_month\"\n  },\n  \"alias\": \"add_dated\"\n}\n</code></pre>"},{"location":"functions/date_add/#sql","title":"SQL","text":"<pre><code>DATE_ADD(users.created_at, INTERVAL 4 YEAR_MONTH) AS add_dated\n</code></pre>"},{"location":"functions/date_format/","title":"DateFormat","text":""},{"location":"functions/date_format/#basic-information","title":"Basic information","text":"Object type <code>functions.DateFormat</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"functions/date_format/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.DateFormat</code> True property <code>functions.*</code> <code>Property</code> <code>Constant</code> <code>CastOperator</code> True format String True alias String False"},{"location":"functions/date_format/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.DateFormat\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.created_at\",\n    \"alias\": null\n  },\n  \"format\": \"%Y-%m-%d %H:%i:%s\",\n  \"alias\": \"formatted_datetime\"\n}\n</code></pre>"},{"location":"functions/date_format/#sql","title":"SQL","text":"<pre><code>DATE_FORMAT(users.created_at, '%Y-%m-%d %H:%i:%s') AS formatted_datetime\n</code></pre>"},{"location":"functions/date_sub/","title":"DateSub","text":""},{"location":"functions/date_sub/#basic-information","title":"Basic information","text":"Object type <code>functions.DateSub</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"functions/date_sub/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.DateSub</code> True property <code>functions.*</code> <code>Property</code> <code>Constant</code> <code>CastOperator</code> True interval <code>Interval</code> True alias String False"},{"location":"functions/date_sub/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.DateSub\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.created_at\"\n  },\n  \"interval\": {\n    \"obj\": \"structures.Interval\",\n    \"value\": 5,\n    \"unit\": \"day_minute\"\n  },\n  \"alias\": \"sub_dated\"\n}\n</code></pre>"},{"location":"functions/date_sub/#sql","title":"SQL","text":"<pre><code>DATE_SUB(users.created_at, INTERVAL 5 DAY_MINUTE) AS sub_dated\n</code></pre>"},{"location":"functions/extract/","title":"Extract","text":""},{"location":"functions/extract/#basic-information","title":"Basic information","text":"Object type <code>functions.Extract</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"functions/extract/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.Extract</code> True property List[<code>functions.*</code> <code>Property</code> <code>Constant</code> <code>Interval</code> <code>CastOperator</code>] True unit Enum[<code>century</code> <code>day</code> <code>decade</code> <code>dow</code> <code>doy</code> <code>epoch</code> <code>hour</code> <code>isodow</code> <code>isoyear</code> <code>microseconds</code> <code>millennium</code> <code>milliseconds</code> <code>minute</code> <code>month</code> <code>quarter</code> <code>second</code> <code>timezone</code> <code>timezone_hour</code> <code>timezone_minute</code> <code>week</code> <code>year</code>] True alias String False"},{"location":"functions/extract/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.Extract\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.created_at\"\n  },\n  \"unit\": \"century\"\n}\n</code></pre>"},{"location":"functions/extract/#sql","title":"SQL","text":"<pre><code>EXTRACT(CENTURY FROM users.created_at)\n</code></pre>"},{"location":"functions/group_concat/","title":"GroupConcat","text":""},{"location":"functions/group_concat/#basic-information","title":"Basic information","text":"Object type <code>functions.GroupConcat</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"functions/group_concat/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.GroupConcat</code> True property <code>functions.*</code> <code>Property</code> <code>Constant</code> <code>CastOperator</code> True alias String False"},{"location":"functions/group_concat/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.GroupConcat\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.id\"\n  },\n  \"alias\": \"my_ids\"\n}\n</code></pre>"},{"location":"functions/group_concat/#sql","title":"SQL","text":"<pre><code>GROUP_CONCAT(users.id) AS my_ids\n</code></pre>"},{"location":"functions/initcap/","title":"InitCap","text":""},{"location":"functions/initcap/#basic-information","title":"Basic information","text":"Object type <code>functions.InitCap</code> Since 0.6.0 Dialects <code>PostgreSQL</code>"},{"location":"functions/initcap/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.InitCap</code> True property <code>properties.Property</code> <code>functions.*</code> <code>Constant</code> <code>CastOperator</code> True alias String False"},{"location":"functions/initcap/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.InitCap\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.name\"\n  }\n}\n</code></pre>"},{"location":"functions/initcap/#sql","title":"SQL","text":"<pre><code>initcap(users.name)\n</code></pre>"},{"location":"functions/initcap/#sql-reference","title":"SQL reference","text":"<ul> <li>PostgreSQL - String Functions and Operators</li> </ul>"},{"location":"functions/lower/","title":"Lower","text":""},{"location":"functions/lower/#basic-information","title":"Basic information","text":"Object type <code>functions.Lower</code> Since 0.6.0 Dialects <code>PostgreSQL</code> <code>MySQL</code> <code>MariaDB</code>"},{"location":"functions/lower/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.Lower</code> True property <code>properties.Property</code> <code>functions.*</code> <code>Constant</code> <code>CastOperator</code> True alias String False"},{"location":"functions/lower/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.Lower\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.name\"\n  }\n}\n</code></pre>"},{"location":"functions/lower/#sql","title":"SQL","text":"<pre><code>lower(users.name)\n</code></pre>"},{"location":"functions/lower/#sql-reference","title":"SQL reference","text":"<ul> <li>PostgreSQL - String Functions and Operators</li> <li>MariaDB - Lower</li> </ul>"},{"location":"functions/max/","title":"Max","text":""},{"location":"functions/max/#basic-information","title":"Basic information","text":"Object type <code>functions.Max</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"functions/max/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.Max</code> True property <code>functions.*</code> <code>Property</code> <code>CastOperator</code> True alias String False"},{"location":"functions/max/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.Max\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.age\"\n  },\n  \"alias\": \"maximum_age\"\n}\n</code></pre>"},{"location":"functions/max/#sql","title":"SQL","text":"<pre><code>MAX(users.age) AS maximum_age\n</code></pre>"},{"location":"functions/min/","title":"Min","text":""},{"location":"functions/min/#basic-information","title":"Basic information","text":"Object type <code>functions.Min</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"functions/min/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.Min</code> True property <code>functions.*</code> <code>Property</code> <code>CastOperator</code> True alias String False"},{"location":"functions/min/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.Min\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.age\"\n  },\n  \"alias\": \"minimum_age\"\n}\n</code></pre>"},{"location":"functions/min/#sql","title":"SQL","text":"<pre><code>MIN(users.age) AS minimum_age\n</code></pre>"},{"location":"functions/now/","title":"Now","text":""},{"location":"functions/now/#basic-information","title":"Basic information","text":"Object type <code>functions.Now</code> Since 0.3.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"functions/now/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.Now</code> True alias String False"},{"location":"functions/now/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.Now\",\n  \"alias\": \"today\"\n}\n</code></pre>"},{"location":"functions/now/#sql","title":"SQL","text":"<pre><code>NOW() AS today\n</code></pre>"},{"location":"functions/string_agg/","title":"StringAgg","text":""},{"location":"functions/string_agg/#basic-information","title":"Basic information","text":"Object type <code>functions.StringAgg</code> Since 0.1.6 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"functions/string_agg/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.StringAgg</code> True property <code>functions.*</code> <code>Property</code> <code>Array</code> <code>structures.distinct</code> True separator string True alias String False"},{"location":"functions/string_agg/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.StringAgg\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"transactions.amount\"\n  },\n  \"separator\": \", \",\n  \"alias\": \"amounts\"\n}\n</code></pre>"},{"location":"functions/string_agg/#sql","title":"SQL","text":"<pre><code>STRING_AGG(transactions.amount, ', ') AS amounts\n</code></pre>"},{"location":"functions/sum/","title":"Sum","text":""},{"location":"functions/sum/#basic-information","title":"Basic information","text":"Object type <code>functions.Sum</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"functions/sum/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.Sum</code> True property <code>functions.*</code> <code>Property</code> <code>CastOperator</code> True alias String False"},{"location":"functions/sum/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.Sum\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"transactions.amount\"\n  },\n  \"alias\": \"total_amount\"\n}\n</code></pre>"},{"location":"functions/sum/#sql","title":"SQL","text":"<pre><code>SUM(transactions.amount) AS total_amount\n</code></pre>"},{"location":"functions/to_char/","title":"ToChar","text":""},{"location":"functions/to_char/#basic-information","title":"Basic information","text":"Object type <code>functions.ToChar</code> Since 0.4.0 Dialects <code>PostgreSQL</code>"},{"location":"functions/to_char/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.ToChar</code> True property <code>functions.*</code> <code>Property</code> <code>Constant</code> <code>CastOperator</code> <code>Interval</code> True format String True alias String False"},{"location":"functions/to_char/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.ToChar\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.created_at\"\n  },\n  \"format\": \"HH12:MI:SS\",\n  \"alias\": \"formatted_datetime\"\n}\n</code></pre>"},{"location":"functions/to_char/#sql","title":"SQL","text":"<pre><code>to_char(users.created_at, 'HH12:MI:SS') AS formatted_datetime\n</code></pre>"},{"location":"functions/to_date/","title":"ToDate","text":""},{"location":"functions/to_date/#basic-information","title":"Basic information","text":"Object type <code>functions.ToDate</code> Since 0.4.0 Dialects <code>PostgreSQL</code>"},{"location":"functions/to_date/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.ToDate</code> True property <code>functions.*</code> <code>Property</code> <code>Constant</code> <code>CastOperator</code> True format String True alias String False"},{"location":"functions/to_date/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.ToDate\",\n  \"property\": {\n    \"obj\": \"properties.Constant\",\n    \"value\": \"05 Dec 2000\"\n  },\n  \"format\": \"DD Mon YYYY\"\n}\n</code></pre>"},{"location":"functions/to_date/#sql","title":"SQL","text":"<pre><code>to_date('05 Dec 2000', 'DD Mon YYYY')\n</code></pre>"},{"location":"functions/unaccent/","title":"Unaccent","text":""},{"location":"functions/unaccent/#basic-information","title":"Basic information","text":"Object type <code>functions.Unaccent</code> Since 0.5.0 Dialects <code>PostgreSQL</code> <p>You need to have enabled <code>unaccent</code> extension on your PostgreSQL database (using call <code>CREATE EXTENSION unaccent</code>)</p>"},{"location":"functions/unaccent/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.Unaccent</code> True property <code>properties.Property</code> <code>functions.*</code> <code>Constant</code> <code>CastOperator</code> True alias String False"},{"location":"functions/unaccent/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.Unaccent\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.name\"\n  }\n}\n</code></pre>"},{"location":"functions/unaccent/#sql","title":"SQL","text":"<pre><code>unaccent(users.name)\n</code></pre>"},{"location":"functions/unaccent/#sql-reference","title":"SQL reference","text":"<ul> <li>PostgreSQL</li> </ul>"},{"location":"functions/upper/","title":"Upper","text":""},{"location":"functions/upper/#basic-information","title":"Basic information","text":"Object type <code>functions.Upper</code> Since 0.6.0 Dialects <code>PostgreSQL</code> <code>MySQL</code> <code>MariaDB</code>"},{"location":"functions/upper/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.Upper</code> True property <code>properties.Property</code> <code>functions.*</code> <code>Constant</code> <code>CastOperator</code> True alias String False"},{"location":"functions/upper/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.Upper\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.name\"\n  }\n}\n</code></pre>"},{"location":"functions/upper/#sql","title":"SQL","text":"<pre><code>upper(users.name)\n</code></pre>"},{"location":"functions/upper/#sql-reference","title":"SQL reference","text":"<ul> <li>PostgreSQL - String Functions and Operators</li> <li>MariaDB - Upper</li> </ul>"},{"location":"functions/weekday/","title":"Weekday","text":""},{"location":"functions/weekday/#basic-information","title":"Basic information","text":"Object type <code>functions.Weekday</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"functions/weekday/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>functions.Weekday</code> True property <code>functions.*</code> <code>Property</code> <code>Constant</code> <code>CastOperator</code> True alias String False"},{"location":"functions/weekday/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"functions.Weekday\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.birthday\"\n  },\n  \"alias\": \"special_day\"\n}\n</code></pre>"},{"location":"functions/weekday/#sql","title":"SQL","text":"<pre><code>WEEKDAY(users.birthday) AS special_day\n</code></pre>"},{"location":"properties/array/","title":"Array","text":""},{"location":"properties/array/#basic-information","title":"Basic information","text":"Object type <code>properties.Array</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"properties/array/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"properties.Array\",\n  \"values\": [\n    {\n      \"obj\": \"properties.Constant\",\n      \"value\": \"Arthur Dent\"\n    },\n    {\n      \"obj\": \"properties.Constant\",\n      \"value\": \"Deep Thought\"\n    },\n    {\n      \"obj\": \"properties.Constant\",\n      \"value\": \"Tricia Marie McMillan\"\n    },\n    {\n      \"obj\": \"properties.Constant\",\n      \"value\": \"Questular Rontok\"\n    }\n  ]\n}\n</code></pre>"},{"location":"properties/array/#sql","title":"SQL","text":"<pre><code>('Arthur Dent', 'Deep Thought', 'Tricia Marie McMillan', 'Questular Rontok')\n</code></pre>"},{"location":"properties/array/#sql-reference","title":"SQL reference","text":"<ul> <li>PostgreSQL</li> </ul>"},{"location":"properties/boolean/","title":"Boolean","text":""},{"location":"properties/boolean/#basic-information","title":"Basic information","text":"Object type <code>properties.Boolean</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"properties/boolean/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"properties.Boolean\",\n  \"value\": false\n}\n</code></pre>"},{"location":"properties/boolean/#sql","title":"SQL","text":"<pre><code>FALSE\n</code></pre>"},{"location":"properties/boolean/#sql-reference","title":"SQL reference","text":"<ul> <li>PostgreSQL</li> <li>MySQL</li> <li>MariaDB</li> </ul>"},{"location":"properties/constant/","title":"Constant","text":""},{"location":"properties/constant/#basic-information","title":"Basic information","text":"Object type <code>properties.Constant</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"properties/constant/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"properties.Constant\",\n  \"value\": \"The answer!\"\n}\n</code></pre>"},{"location":"properties/constant/#sql","title":"SQL","text":"<pre><code>'The answer!'\n</code></pre>"},{"location":"properties/null/","title":"Null","text":""},{"location":"properties/null/#basic-information","title":"Basic information","text":"Object type <code>properties.Null</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"properties/null/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"properties.Null\"\n}\n</code></pre>"},{"location":"properties/null/#sql","title":"SQL","text":"<pre><code>NULL\n</code></pre>"},{"location":"properties/null/#sql-reference","title":"SQL reference","text":"<ul> <li>MySQL</li> <li>MariaDB</li> </ul>"},{"location":"properties/property/","title":"Property","text":""},{"location":"properties/property/#basic-information","title":"Basic information","text":"Object type <code>properties.Property</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"properties/property/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"properties.Property\",\n  \"name\": \"users.name\",\n  \"alias\": \"name\"\n}\n</code></pre>"},{"location":"properties/property/#sql","title":"SQL","text":"<pre><code>users.name AS \"name\"\n</code></pre>"},{"location":"properties/property/#json-properties","title":"JSON Properties","text":"<p>As of version 0.8.0 you can use <code>properties.Property</code> object for <code>PostgreSQL</code> JSON lookups.</p> <p>JSON</p> <pre><code>{\n  \"obj\": \"properties.Property\",\n  \"name\": \"users.additional_data -&gt; metadata -&gt;&gt; age\",\n  \"alias\": \"age\"\n}\n</code></pre> <p>Python</p> <pre><code>from duckql import  Property\n\njson_property = Property(\n    name='users.additional_data -&gt; custom_fields -&gt;&gt; age',\n    alias='age'\n)\n</code></pre> <p>SQL</p> <pre><code>users.additional_data -&gt; 'metadata' -&gt;&gt; 'age' AS \"age\"\n</code></pre>"},{"location":"structures/between/","title":"Between","text":""},{"location":"structures/between/#basic-information","title":"Basic information","text":"Object type <code>structures.Between</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"structures/between/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>structures.Between</code> True property <code>functions.*</code> <code>properties.Property</code> <code>Constant</code> True values List[<code>functions.*</code> <code>properties.Property</code> <code>Constant</code>]{2} True"},{"location":"structures/between/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"structures.Between\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"transactions.happened_at\"\n  },\n  \"values\": [\n    {\n      \"obj\": \"properties.Constant\",\n      \"value\": \"2020-01-01\"\n    },\n    {\n      \"obj\": \"properties.Constant\",\n      \"value\": \"2020-02-01\"\n    }\n  ]\n}\n</code></pre>"},{"location":"structures/between/#sql","title":"SQL","text":"<pre><code>transactions.happened_at BETWEEN '2020-01-01' AND '2020-02-01'\n</code></pre>"},{"location":"structures/cast_operator/","title":"CastOperator","text":""},{"location":"structures/cast_operator/#basic-information","title":"Basic information","text":"Object type <code>structures.CastOperator</code> Since 0.1.6 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"structures/cast_operator/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>structures.Distinct</code> True property <code>functions.*</code> <code>Property</code> True to Enum[<code>boolean</code> <code>bool</code> <code>char</code> <code>varchar</code> <code>text</code> <code>smallint</code> <code>integer</code> <code>int</code> <code>timestamp</code> <code>date</code>] True alias String False"},{"location":"structures/cast_operator/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"structures.CastOperator\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.age\"\n  },\n  \"to\": \"varchar\",\n  \"alias\": \"age_as_string\"\n}\n</code></pre>"},{"location":"structures/cast_operator/#sql","title":"SQL","text":"<pre><code>users.age::varchar AS age_as_string\n</code></pre>"},{"location":"structures/comparision/","title":"Comparision","text":""},{"location":"structures/comparision/#basic-information","title":"Basic information","text":"Object type <code>structures.Comparision</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"structures/comparision/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>structures.Comparision</code> True properties List[<code>functions.*</code> <code>Constant</code> <code>Property</code> <code>Array</code> <code>Boolean</code> <code>Null</code>]{2} True operation Enum[<code>eq</code> <code>neq</code> <code>lt</code> <code>lte</code> <code>gt</code> <code>gte</code> <code>like</code> <code>in</code> <code>nlike</code> <code>nin</code> <code>is</code> <code>nis</code> <code>contains</code>] True"},{"location":"structures/comparision/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"structures.Comparision\",\n  \"properties\": [\n    {\n      \"obj\": \"properties.Property\",\n      \"name\": \"users.id\"\n    },\n    {\n      \"obj\": \"properties.Array\",\n      \"values\": [\n        {\n          \"obj\": \"properties.Constant\",\n          \"value\": \"1\"\n        },\n        {\n          \"obj\": \"properties.Constant\",\n          \"value\": \"2\"\n        },\n        {\n          \"obj\": \"properties.Constant\",\n          \"value\": \"3\"\n        }\n      ]\n    }\n  ],\n  \"operation\": \"in\"\n}\n</code></pre>"},{"location":"structures/comparision/#sql","title":"SQL","text":"<pre><code>(users.id IN (1, 2, 3))\n</code></pre>"},{"location":"structures/distinct/","title":"Distinct","text":""},{"location":"structures/distinct/#basic-information","title":"Basic information","text":"Object type <code>structures.Distinct</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"structures/distinct/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>structures.Distinct</code> True property <code>functions.*</code> <code>Property</code> True"},{"location":"structures/distinct/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"structures.Distinct\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.name\"\n  }\n}\n</code></pre>"},{"location":"structures/distinct/#sql","title":"SQL","text":"<pre><code>DISTINCT users.name\n</code></pre>"},{"location":"structures/interval/","title":"Interval","text":""},{"location":"structures/interval/#basic-information","title":"Basic information","text":"Object type <code>structures.Interval</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"structures/interval/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>structures.Interval</code> True value Integer True unit Enum[<code>microsecond</code> <code>second</code> <code>minute</code> <code>hour</code> <code>day</code> <code>week</code> <code>month</code> <code>quarter</code> <code>year</code> <code>second_microsecond</code> <code>minute_microsecond</code> <code>minute_second</code> <code>hour_microsecond</code> <code>hour_second</code> <code>hour_minute</code> <code>day_microsecond</code> <code>day_second</code> <code>day_minute</code> <code>day_hour</code> <code>year_month</code>] True"},{"location":"structures/interval/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"structures.Interval\",\n  \"value\": -5,\n  \"unit\": \"day\"\n}\n</code></pre>"},{"location":"structures/interval/#sql","title":"SQL","text":"<pre><code>INTERVAL '-5 DAY'\n</code></pre>"},{"location":"structures/join/","title":"Join","text":""},{"location":"structures/join/#basic-information","title":"Basic information","text":"Object type <code>structures.Join</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"structures/join/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>structures.Join</code> True entity String True type Enum[<code>left</code> <code>right</code> <code>inner</code> <code>outer</code> <code>cross</code> <code>full_outer</code> <code>left_outer</code> <code>right_outer</code> <code>natural</code>] True on <code>Comparision</code> <code>Operator</code> True alias String False"},{"location":"structures/join/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"structures.Join\",\n  \"entity\": \"transactions\",\n  \"type\": \"left\",\n  \"on\": {\n    \"obj\": \"structures.Operator\",\n    \"operation\": \"and\",\n    \"properties\": [\n      {\n        \"obj\": \"structures.Comparision\",\n        \"properties\": [\n          {\n            \"obj\": \"properties.Property\",\n            \"name\": \"t.user_id\"\n          },\n          {\n            \"obj\": \"properties.Property\",\n            \"name\": \"users.id\"\n          }\n        ],\n        \"operation\": \"eq\"\n      },\n      {\n        \"obj\": \"structures.Comparision\",\n        \"properties\": [\n          {\n            \"obj\": \"properties.Property\",\n            \"name\": \"t.creator_id\"\n          },\n          {\n            \"obj\": \"properties.Property\",\n            \"name\": \"users.id\"\n          }\n        ],\n        \"operation\": \"neq\"\n      }\n    ]\n  },\n  \"alias\": \"t\"\n}\n</code></pre> <p>SQL</p> <pre><code>LEFT JOIN transactions t ON ((t.user_id = users.id) AND (t.creator_id != users.id))\n</code></pre>"},{"location":"structures/limit/","title":"Limit","text":""},{"location":"structures/limit/#basic-information","title":"Basic information","text":"Object type <code>structures.Limit</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"structures/limit/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>structures.Limit</code> True limit Integer True offset Integer False"},{"location":"structures/limit/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"structures.Limit\",\n  \"limit\": 42,\n  \"offset\": 5\n}\n</code></pre>"},{"location":"structures/limit/#sql","title":"SQL","text":"<pre><code>LIMIT 42 OFFSET 5\n</code></pre>"},{"location":"structures/operator/","title":"Operator","text":""},{"location":"structures/operator/#basic-information","title":"Basic information","text":"Object type <code>structures.Operator</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"structures/operator/#object-attributes","title":"Object attributes","text":"Property Accepts Required obj <code>structures.Operator</code> True operation Enum[<code>and</code> <code>or</code> <code>division</code> <code>multiplication</code> <code>subtraction</code> <code>addition</code>] True properties List[<code>functions.*</code> <code>Constant</code> <code>Property</code> <code>Boolean</code> <code>structures.Comparision</code>] True alias String False"},{"location":"structures/operator/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"structures.Operator\",\n  \"operation\": \"and\",\n  \"properties\": [\n    {\n      \"obj\": \"structures.Comparision\",\n      \"properties\": [\n        {\n          \"obj\": \"properties.Property\",\n          \"name\": \"users.age\"\n        },\n        {\n          \"obj\": \"properties.Constant\",\n          \"value\": \"15\"\n        }\n      ],\n      \"operation\": \"gte\"\n    },\n    {\n      \"obj\": \"structures.Comparision\",\n      \"properties\": [\n        {\n          \"obj\": \"properties.Property\",\n          \"name\": \"users.city\"\n        },\n        {\n          \"obj\": \"properties.Array\",\n          \"values\": [\n            {\n              \"obj\": \"properties.Constant\",\n              \"value\": \"Martin\"\n            },\n            {\n              \"obj\": \"properties.Constant\",\n              \"value\": \"Bratislava\"\n            }\n          ]\n        }\n      ],\n      \"operation\": \"in\"\n    }\n  ]\n}\n</code></pre>"},{"location":"structures/operator/#sql","title":"SQL","text":"<pre><code>((users.age &gt;= 15) AND (users.city IN ('Martin', 'Bratislava')))\n</code></pre>"},{"location":"structures/order/","title":"Order","text":""},{"location":"structures/order/#basic-information","title":"Basic information","text":"Object type <code>structures.Order</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"structures/order/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>structures.Order</code> True property <code>functions.*</code> <code>properties.Property</code> <code>strctures.CastOperator</code> True kind Enum[<code>ASC</code> <code>DESC</code>] False"},{"location":"structures/order/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"structures.Order\",\n  \"property\": {\n    \"obj\": \"properties.Property\",\n    \"name\": \"users.name\"\n  }\n}\n</code></pre>"},{"location":"structures/order/#sql","title":"SQL","text":"<pre><code>users.name ASC\n</code></pre>"},{"location":"structures/query/","title":"Query","text":""},{"location":"structures/query/#basic-information","title":"Basic information","text":"Object type <code>structures.Query</code> Since 0.1.0 Dialects <code>MySQL</code> <code>MariaDB</code> <code>PostgreSQL</code>"},{"location":"structures/query/#object-attributes","title":"Object attributes","text":"Attribute Accepts Required obj <code>structures.Query</code> True entity String True properties List[<code>functions.*</code> <code>properties.Property</code> <code>structures.Distinct</code> <code>structures.CastOperator</code>] True joins List[<code>structures.Join</code>] False conditions <code>structures.Operator</code> <code>structures.Comparision</code> False order List[<code>structures.Order</code>] False group List[<code>functions.*</code> <code>properties.Property</code>] False having <code>structures.Operator</code> <code>structures.Comparision</code> False limit <code>structures.Limit</code> False alias String False"},{"location":"structures/query/#json-format","title":"JSON format","text":"<pre><code>{\n  \"obj\": \"structures.Query\",\n  \"entity\": \"users\",\n  \"properties\": [\n    {\n      \"obj\": \"properties.Property\",\n      \"name\": \"users.name\",\n      \"alias\": \"users_name\"\n    },\n    {\n      \"obj\": \"functions.ConvertTimezone\",\n      \"property\": {\n        \"obj\": \"properties.Property\",\n        \"name\": \"users.created_at\",\n        \"alias\": null\n      },\n      \"date_from\": {\n        \"obj\": \"properties.Constant\",\n        \"value\": \"+00:00\"\n      },\n      \"date_to\": {\n        \"obj\": \"properties.Constant\",\n        \"value\": \"Europe/Bratislava\"\n      },\n      \"alias\": \"valid_timezone\"\n    }\n  ],\n  \"joins\": [\n    {\n      \"obj\": \"structures.Join\",\n      \"entity\": \"transactions\",\n      \"type\": \"left\",\n      \"on\": {\n        \"obj\": \"structures.Operator\",\n        \"operation\": \"and\",\n        \"properties\": [\n          {\n            \"obj\": \"structures.Comparision\",\n            \"properties\": [\n              {\n                \"obj\": \"properties.Property\",\n                \"name\": \"transactions.user_id\",\n                \"alias\": null\n              },\n              {\n                \"obj\": \"properties.Property\",\n                \"name\": \"users.id\",\n                \"alias\": null\n              }\n            ],\n            \"operation\": \"eq\"\n          },\n          {\n            \"obj\": \"structures.Comparision\",\n            \"properties\": [\n              {\n                \"obj\": \"properties.Property\",\n                \"name\": \"transactions.creator_id\",\n                \"alias\": null\n              },\n              {\n                \"obj\": \"properties.Property\",\n                \"name\": \"users.id\",\n                \"alias\": null\n              }\n            ],\n            \"operation\": \"neq\"\n          }\n        ],\n        \"alias\": null\n      },\n      \"alias\": null\n    }\n  ],\n  \"conditions\": {\n    \"obj\": \"structures.Operator\",\n    \"operation\": \"and\",\n    \"properties\": [\n      {\n        \"obj\": \"structures.Comparision\",\n        \"properties\": [\n          {\n            \"obj\": \"properties.Property\",\n            \"name\": \"users.age\",\n            \"alias\": null\n          },\n          {\n            \"obj\": \"properties.Constant\",\n            \"value\": \"15\"\n          }\n        ],\n        \"operation\": \"gte\"\n      },\n      {\n        \"obj\": \"structures.Comparision\",\n        \"properties\": [\n          {\n            \"obj\": \"properties.Property\",\n            \"name\": \"users.city\",\n            \"alias\": null\n          },\n          {\n            \"obj\": \"properties.Array\",\n            \"values\": [\n              {\n                \"obj\": \"properties.Constant\",\n                \"value\": \"Martin\"\n              },\n              {\n                \"obj\": \"properties.Constant\",\n                \"value\": \"Bratislava\"\n              }\n            ]\n          }\n        ],\n        \"operation\": \"in\"\n      }\n    ],\n    \"alias\": null\n  },\n  \"having\": {\n    \"obj\": \"structures.Comparision\",\n    \"properties\": [\n      {\n        \"obj\": \"functions.Sum\",\n        \"property\": {\n          \"obj\": \"properties.Property\",\n          \"name\": \"transactions.value\",\n          \"alias\": null\n        },\n        \"alias\": null\n      },\n      {\n        \"obj\": \"properties.Constant\",\n        \"value\": \"420\"\n      }\n    ],\n    \"operation\": \"gt\"\n  },\n  \"order\": [\n    {\n      \"obj\": \"structures.Order\",\n      \"property\": {\n        \"obj\": \"properties.Property\",\n        \"name\": \"users.surname\",\n        \"alias\": null\n      },\n      \"kind\": \"ASC\"\n    },\n    {\n      \"obj\": \"structures.Order\",\n      \"property\": {\n        \"obj\": \"properties.Property\",\n        \"name\": \"users.name\",\n        \"alias\": null\n      },\n      \"kind\": \"DESC\"\n    }\n  ],\n  \"group\": [\n    {\n      \"obj\": \"properties.Property\",\n      \"name\": \"users.email\",\n      \"alias\": null\n    },\n    {\n      \"obj\": \"properties.Property\",\n      \"name\": \"users.id\",\n      \"alias\": null\n    }\n  ],\n  \"limit\": {\n    \"obj\": \"structures.Limit\",\n    \"limit\": 10,\n    \"offset\": 4\n  },\n  \"alias\": \"my_query\"\n}\n</code></pre>"},{"location":"structures/query/#sql","title":"SQL","text":"<pre><code>(\n    SELECT users.name,\n    CONVERT_TZ(users.created_at, '+00:00', 'Europe/Bratislava')\n    FROM users\n    LEFT JOIN transactions ON\n    (\n        (transactions.user_id = users.id)\n        AND (transactions.creator_id != users.id)\n    )\n    WHERE\n    (\n        (users.age &gt;= 15)\n        AND (users.city IN ('Martin', 'Bratislava'))\n    )\n    GROUP BY users.email, users.id\n    HAVING (SUM(transactions.value) &gt; 420)\n    ORDER BY users.surname ASC, users.name DESC\n    LIMIT 10 OFFSET 4\n)\nAS my_query\n</code></pre>"}]}